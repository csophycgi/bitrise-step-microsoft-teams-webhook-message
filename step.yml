#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  microsoft-teams-webhook-message
summary: |
  Send a build message to a Powerautomate webhook for Microsoft Teams
description: |
  This plugin will help you send a payload to a simple webhook
website: https://github.com/fgrmt/bitrise-step-microsoft-teams-webhook-message
source_code_url: https://github.com/fgrmt/bitrise-step-microsoft-teams-webhook-message
support_url: https://github.com/fgrmt/bitrise-step-microsoft-teams-webhook-message/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - notification

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
# is_always_run: false
# is_skippable: false
# run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - webhook_url:
    opts:
      title: 'Webhook URL'
      summary: The webhook URL where the notification payload should be sent.
      description: |
        **Webhook\_url is required.**
      is_required: true
      is_sensitive: true
      is_expand: true
  - team_id:
    opts:
      title: 'Team Id'
      summary: The team id for the team where the notification should be sent.
      description: |
        **Team id is required.**
      is_required: true
      is_sensitive: false
      is_expand: true
  - channel_id:
    opts:
      title: 'Channel Id'
      summary: The channel id for the channel where the notification should be sent.
      description: |
        **Channel id is required.**
      is_required: true
      is_sensitive: false
      is_expand: true
  - app_avatar_api_token:
    opts:
      title: 'Bitrise API token'
      summary: Bitrise API token for fetching the app avatar image.
      description: |
        **Bitrise API token is required.**
      is_required: true
      is_sensitive: true
      is_expand: true
  - preset_status: 'auto'
    opts:
      title: 'Set Specific Status'
      summary: Set a specitif status instead of reporting the current build status.
      description: |-
        If set, this step will set a specific status instead of reporting the current build status.

        Can be one of auto, running, success, failed or aborted.
        If you select `auto` the step will send `success` status if the current build status is success (no step failed previously)
        and `failed` status if the build previously failed.
      value_options:
        - 'auto'
        - 'running'
        - 'success'
        - 'failed'
        - 'aborted'
      is_required: true
      is_expand: true
  - is_debug_mode: 'no'
    opts:
      title: 'Debug mode?'
      description: |-
        Step prints additional debug information if this option is enabled
      value_options:
        - 'yes'
        - 'no'
      is_required: true
      is_expand: true
